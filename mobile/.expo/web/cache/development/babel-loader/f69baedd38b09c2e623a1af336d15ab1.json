{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"../../exports/View\";\nimport React from 'react';\n\nvar UnimplementedView = function (_React$Component) {\n  _inherits(UnimplementedView, _React$Component);\n\n  var _super = _createSuper(UnimplementedView);\n\n  function UnimplementedView() {\n    _classCallCheck(this, UnimplementedView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UnimplementedView, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [unimplementedViewStyles, this.props.style]\n      }, this.props.children);\n    }\n  }]);\n\n  return UnimplementedView;\n}(React.Component);\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;","map":{"version":3,"names":["View","React","UnimplementedView","createElement","style","unimplementedViewStyles","props","children","Component","process","env","NODE_ENV","alignSelf","borderColor","borderWidth"],"sources":["C:/Users/LA CASA DE PAPELCIO/Desktop/nlw_project/mobile/node_modules/react-native-web/dist/modules/UnimplementedView/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport View from '../../exports/View';\nimport React from 'react';\n/**\n * Common implementation for a simple stubbed view.\n */\n\nclass UnimplementedView extends React.Component {\n  setNativeProps() {// Do nothing.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: [unimplementedViewStyles, this.props.style]\n    }, this.props.children);\n  }\n\n}\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;"],"mappings":";;;;;;;;;;AAQA,OAAOA,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAKMC,iB;;;;;;;;;;;;;WACJ,0BAAiB,CAChB;;;WAED,kBAAS;MACP,OAAoBD,KAAK,CAACE,aAAN,CAAoBH,IAApB,EAA0B;QAC5CI,KAAK,EAAE,CAACC,uBAAD,EAA0B,KAAKC,KAAL,CAAWF,KAArC;MADqC,CAA1B,EAEjB,KAAKE,KAAL,CAAWC,QAFM,CAApB;IAGD;;;;EAR6BN,KAAK,CAACO,S;;AAYtC,IAAIH,uBAAuB,GAAGI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EACpEC,SAAS,EAAE,YADyD;EAEpEC,WAAW,EAAE,KAFuD;EAGpEC,WAAW,EAAE;AAHuD,CAAxC,GAI1B,EAJJ;AAKA,eAAeZ,iBAAf"},"metadata":{},"sourceType":"module"}